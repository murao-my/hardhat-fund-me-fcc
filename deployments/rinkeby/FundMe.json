{
  "address": "0x9FAD539cfF144F0134f38C043ceD0956120222e4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf1754e50e65b3de65758acebdfe06fed143d6f987dba564188b22ed054083910",
  "receipt": {
    "to": null,
    "from": "0x5F3b6C8BCbc72a041ee98c521B375cb3f7882a23",
    "contractAddress": "0x9FAD539cfF144F0134f38C043ceD0956120222e4",
    "transactionIndex": 9,
    "gasUsed": "919280",
    "logsBloom": "0x
    "blockHash": "0x3c5b38cc9d25e50a8990abe1494a2db8348f5684b14b912a2c2f3d4720846fc5",
    "transactionHash": "0xf1754e50e65b3de65758acebdfe06fed143d6f987dba564188b22ed054083910",
    "logs": [],
    "blockNumber": 11295853,
    "cumulativeGasUsed": "1460296",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "23749af0971145319c6730ad1f7c48f6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get fund From Users\\n//Withdraw funds\\n//Set a minimum funding value in USD\\n//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.8;\\n\\n//\\u53d6\\u5f97\\u65b9\\u6cd5\\uff1ahttps://docs.chain.link/docs/get-the-latest-price/\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    //constant:21438gas\\n    //non-constant: 23538gas\\n    //constant\\u3092\\u4f7f\\u3046\\u3053\\u3068\\u3067\\u30b9\\u30c8\\u30ec\\u30fc\\u30b8\\u3067\\u306f\\u306a\\u304f\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30d0\\u30a4\\u30c8\\u30b3\\u30fc\\u30c9\\u306b\\u683c\\u7d0d\\u3059\\u308b\\u306e\\u3067gas\\u3092\\u7bc0\\u7d04\\u3059\\u308b\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    AggregatorV3Interface public priceFeed;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    //immutable\\u3092\\u4f7f\\u3046\\u3053\\u3068\\u3067\\u30b9\\u30c8\\u30ec\\u30fc\\u30b8\\u3067\\u306f\\u306a\\u304f\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30d0\\u30a4\\u30c8\\u30b3\\u30fc\\u30c9\\u306b\\u683c\\u7d0d\\u3059\\u308b\\u306e\\u3067gas\\u3092\\u7bc0\\u7d04\\u3059\\u308b\\n    address public immutable i_owner;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        //want to be able to set a minimum fund amount in USD\\n        //1e18=1*10**18\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough ether\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    // function getPrice(AggregatorV3Interface priceFeed)\\n    //     public\\n    //     view\\n    //     returns (uint256)\\n    // {\\n    //     //\\u4ed6\\u306e\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u3068\\u5bfe\\u8a71\\u3059\\u308b\\u306b\\u306f\\u6b21\\u306e\\uff12\\u3064\\u304c\\u5fc5\\u8981\\n    //     //ABI:\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a4\\u30f3\\u30bf\\u30d5\\u30a7\\u30fc\\u30b9\\u3092\\u78ba\\u8a8d\\u3059\\u308b\\n    //     //ADDRESS:0x8A753747A1Fa494EC906cE90E9f37563A8AF630e \\u53d6\\u5f97\\u65b9\\u6cd5:https://docs.chain.link/docs/ethereum-addresses/\\n    //     // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //     //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    //     // );\\n    //     (, int256 price, , , ) = priceFeed.latestRoundData();\\n    //     //ETH in term of USD\\n    //     return uint256(price * 1e10); //1**10=1e10\\n    // }\\n\\n    // function getConversionRate(\\n    //     uint256 ethAmount,\\n    //     AggregatorV3Interface priceFeed\\n    // ) public view returns (uint256) {\\n    //     uint256 ethPrice = getPrice(priceFeed);\\n    //     uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n    //     return ethAmountInUsd;\\n    // }\\n\\n    function Withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset array\\n        funders = new address[](0);\\n\\n        //actually withdraw the fund\\n\\n        //transfer\\n        //msg.sender\\u306etype\\uff1aaddress\\n        //payable(msg.sender):payable address\\n        //solidity\\u3067\\u306fpayable address\\u306e\\u307fnative token\\u306e\\u9001\\u91d1\\u53ef\\u80fd\\n\\n        payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        //require\\u3092\\u4f7f\\u3046\\u3053\\u3068\\u3067\\u30a8\\u30e9\\u30fc\\u767a\\u751f\\u6642\\u51e6\\u7406\\u3092\\u623b\\u3059\\u3053\\u3068\\u304c\\u51fa\\u6765\\u308b\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send Failed\\\");\\n\\n        //call\\n        //\\u4efb\\u610f\\u306e\\u95a2\\u6570\\u3092\\u547c\\u3076\\u3053\\u3068\\u304c\\u51fa\\u6765\\u308b\\uff1f\\n        //bytes\\u578b\\u306e\\u5909\\u6570\\u3092\\u53d7\\u3051\\u53d6\\u308b\\u3053\\u3068\\u3082\\u3067\\u304d\\u308b\\n        // (bool callSuccess,bytes dataReturned)=payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender==i_owner,\\\"Sender is not owner!\\\");\\n        //\\u6587\\u5b57\\u5217\\u3092\\u4f7f\\u308f\\u306a\\u3044\\u306e\\u3067gas\\u3092\\u7bc0\\u7d04\\u3067\\u304d\\u308b\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _; //\\u547c\\u3073\\u51fa\\u3057\\u5143function\\u3092\\u5b9f\\u884c\\n    }\\n\\n    //fund function\\u306e\\u547c\\u51fa\\u3057\\u306a\\u3057\\u3067\\u3053\\u306e\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306bETH\\u3092\\u9001\\u3063\\u305f\\u5834\\u5408\\u4f55\\u304c\\u8d77\\u304d\\u308b\\uff1f\\n    //solidity\\u3067\\u306f\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306bETH\\u3092\\u9001\\u3063\\u305f\\u5834\\u5408\\u306e\\u6319\\u52d5\\u3092\\u5b9f\\u88c5\\u3059\\u308b2\\u3064\\u306e\\u7279\\u6b8a\\u306a\\u95a2\\u6570\\u304c\\u3042\\u308b\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n    //Eth is sent to contract\\n    //   is msg.data empty?\\n    //     /              \\\\\\n    //   yes               no\\n    //   /                  \\\\\\n    // receive()\\u306f\\u5b9f\\u88c5\\u6e08\\uff1f   fallback()\\n    //   /       \\\\\\n    //  yes      no\\n    //  /         \\\\\\n    // receive() fallback()\\n}\\n\",\"keccak256\":\"0x481de7545445a607b42a3243c69347c9f2711c657ac3c3ca9bebb2a59b89d7da\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity 0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        //\\u4ed6\\u306e\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u3068\\u5bfe\\u8a71\\u3059\\u308b\\u306b\\u306f\\u6b21\\u306e\\uff12\\u3064\\u304c\\u5fc5\\u8981\\n        //ABI:\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a4\\u30f3\\u30bf\\u30d5\\u30a7\\u30fc\\u30b9\\u3092\\u78ba\\u8a8d\\u3059\\u308b\\n        //ADDRESS:0x8A753747A1Fa494EC906cE90E9f37563A8AF630e \\u53d6\\u5f97\\u65b9\\u6cd5:https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        //ETH in term of USD\\n        //3000.00000000\\n        return uint256(price * 1e10); //1**10=1e10\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6a0f60aa27772dc2ee16f45053ba0d88604e8c6689b3216e797e4c793e9ff9f6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010b9380380620010b983398181016040528101906200003791906200011f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000151565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b600060208284031215620001385762000137620000b5565b5b6000620001488482850162000108565b91505092915050565b60805160601c610f4262000177600039600081816102ea015261061d0152610f426000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610864565b6102d0565b6040516100c191906108aa565b60405180910390f35b3480156100d657600080fd5b506100df6102e8565b005b3480156100ed57600080fd5b506100f66105ea565b60405161010391906108aa565b60405180910390f35b34801561011857600080fd5b506101216105f7565b60405161012e9190610924565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661061b565b604051610163919061094e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610995565b61063f565b6040516101a0919061094e565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067e90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a1f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104195760006001828154811061039357610392610a3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041190610a9d565b915050610370565b50600067ffffffffffffffff81111561043557610434610ae6565b5b6040519080825280602002602001820160405280156104635781602001602082028036833780820191505090505b506001908051906020019061047992919061075a565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104c0573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505090508061053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190610b61565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161056090610bb2565b60006040518083038185875af1925050503d806000811461059d576040519150601f19603f3d011682016040523d82523d6000602084013e6105a2565b606091505b50509050806105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd90610c13565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061064f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061068a836106ba565b90506000670de0b6b3a764000085836106a39190610c33565b6106ad9190610cbc565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190610d7a565b5050509150506402540be400816107529190610df5565b915050919050565b8280548282559060005260206000209081019282156107d3579160200282015b828111156107d25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077a565b5b5090506107e091906107e4565b5090565b5b808211156107fd5760008160009055506001016107e5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083182610806565b9050919050565b61084181610826565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a57610879610801565b5b60006108888482850161084f565b91505092915050565b6000819050919050565b6108a481610891565b82525050565b60006020820190506108bf600083018461089b565b92915050565b6000819050919050565b60006108ea6108e56108e084610806565b6108c5565b610806565b9050919050565b60006108fc826108cf565b9050919050565b600061090e826108f1565b9050919050565b61091e81610903565b82525050565b60006020820190506109396000830184610915565b92915050565b61094881610826565b82525050565b6000602082019050610963600083018461093f565b92915050565b61097281610891565b811461097d57600080fd5b50565b60008135905061098f81610969565b92915050565b6000602082840312156109ab576109aa610801565b5b60006109b984828501610980565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b6000610a096018836109c2565b9150610a14826109d3565b602082019050919050565b60006020820190508181036000830152610a38816109fc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa882610891565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610adb57610ada610a6e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4b600b836109c2565b9150610b5682610b15565b602082019050919050565b60006020820190508181036000830152610b7a81610b3e565b9050919050565b600081905092915050565b50565b6000610b9c600083610b81565b9150610ba782610b8c565b600082019050919050565b6000610bbd82610b8f565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610bfd600b836109c2565b9150610c0882610bc7565b602082019050919050565b60006020820190508181036000830152610c2c81610bf0565b9050919050565b6000610c3e82610891565b9150610c4983610891565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8257610c81610a6e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc782610891565b9150610cd283610891565b925082610ce257610ce1610c8d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0c81610ced565b8114610d1757600080fd5b50565b600081519050610d2981610d03565b92915050565b6000819050919050565b610d4281610d2f565b8114610d4d57600080fd5b50565b600081519050610d5f81610d39565b92915050565b600081519050610d7481610969565b92915050565b600080600080600060a08688031215610d9657610d95610801565b5b6000610da488828901610d1a565b9550506020610db588828901610d50565b9450506040610dc688828901610d65565b9350506060610dd788828901610d65565b9250506080610de888828901610d1a565b9150509295509295909350565b6000610e0082610d2f565b9150610e0b83610d2f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4a57610e49610a6e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8757610e86610a6e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec457610ec3610a6e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0157610f00610a6e565b5b82820290509291505056fea2646970667358221220986cbc4779f6d076f594eb5af96f6c1702317f7bfb406a73b2e416839b39caf664736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af9190610864565b6102d0565b6040516100c191906108aa565b60405180910390f35b3480156100d657600080fd5b506100df6102e8565b005b3480156100ed57600080fd5b506100f66105ea565b60405161010391906108aa565b60405180910390f35b34801561011857600080fd5b506101216105f7565b60405161012e9190610924565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661061b565b604051610163919061094e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610995565b61063f565b6040516101a0919061094e565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067e90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a1f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104195760006001828154811061039357610392610a3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041190610a9d565b915050610370565b50600067ffffffffffffffff81111561043557610434610ae6565b5b6040519080825280602002602001820160405280156104635781602001602082028036833780820191505090505b506001908051906020019061047992919061075a565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104c0573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505090508061053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190610b61565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161056090610bb2565b60006040518083038185875af1925050503d806000811461059d576040519150601f19603f3d011682016040523d82523d6000602084013e6105a2565b606091505b50509050806105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd90610c13565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061064f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061068a836106ba565b90506000670de0b6b3a764000085836106a39190610c33565b6106ad9190610cbc565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190610d7a565b5050509150506402540be400816107529190610df5565b915050919050565b8280548282559060005260206000209081019282156107d3579160200282015b828111156107d25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061077a565b5b5090506107e091906107e4565b5090565b5b808211156107fd5760008160009055506001016107e5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061083182610806565b9050919050565b61084181610826565b811461084c57600080fd5b50565b60008135905061085e81610838565b92915050565b60006020828403121561087a57610879610801565b5b60006108888482850161084f565b91505092915050565b6000819050919050565b6108a481610891565b82525050565b60006020820190506108bf600083018461089b565b92915050565b6000819050919050565b60006108ea6108e56108e084610806565b6108c5565b610806565b9050919050565b60006108fc826108cf565b9050919050565b600061090e826108f1565b9050919050565b61091e81610903565b82525050565b60006020820190506109396000830184610915565b92915050565b61094881610826565b82525050565b6000602082019050610963600083018461093f565b92915050565b61097281610891565b811461097d57600080fd5b50565b60008135905061098f81610969565b92915050565b6000602082840312156109ab576109aa610801565b5b60006109b984828501610980565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b6000610a096018836109c2565b9150610a14826109d3565b602082019050919050565b60006020820190508181036000830152610a38816109fc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa882610891565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610adb57610ada610a6e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b4b600b836109c2565b9150610b5682610b15565b602082019050919050565b60006020820190508181036000830152610b7a81610b3e565b9050919050565b600081905092915050565b50565b6000610b9c600083610b81565b9150610ba782610b8c565b600082019050919050565b6000610bbd82610b8f565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610bfd600b836109c2565b9150610c0882610bc7565b602082019050919050565b60006020820190508181036000830152610c2c81610bf0565b9050919050565b6000610c3e82610891565b9150610c4983610891565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8257610c81610a6e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cc782610891565b9150610cd283610891565b925082610ce257610ce1610c8d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d0c81610ced565b8114610d1757600080fd5b50565b600081519050610d2981610d03565b92915050565b6000819050919050565b610d4281610d2f565b8114610d4d57600080fd5b50565b600081519050610d5f81610d39565b92915050565b600081519050610d7481610969565b92915050565b600080600080600060a08688031215610d9657610d95610801565b5b6000610da488828901610d1a565b9550506020610db588828901610d50565b9450506040610dc688828901610d65565b9350506060610dd788828901610d65565b9250506080610de888828901610d1a565b9150509295509295909350565b6000610e0082610d2f565b9150610e0b83610d2f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4a57610e49610a6e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8757610e86610a6e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec457610ec3610a6e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0157610f00610a6e565b5b82820290509291505056fea2646970667358221220986cbc4779f6d076f594eb5af96f6c1702317f7bfb406a73b2e416839b39caf664736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}