{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5558ae32da0a976074316c3ce0056ef1833d796a7e7877cffe96ad76b10e6065",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1021966",
    "logsBloom": "0x
    "blockHash": "0x044612ed69f009fab6a6f82dda1945dce92b6ac0c723d2cea075061241211bec",
    "transactionHash": "0x5558ae32da0a976074316c3ce0056ef1833d796a7e7877cffe96ad76b10e6065",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1021966",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "89cb5bcc74bd9c09b73b565923d8bf54",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.8;\\n\\n//\\u53d6\\u5f97\\u65b9\\u6cd5\\uff1ahttps://docs.chain.link/docs/get-the-latest-price/\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title A contract for crowd funding\\n *\\n */\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n    //constant:21438gas\\n    //non-constant: 23538gas\\n    //constant\\u3092\\u4f7f\\u3046\\u3053\\u3068\\u3067\\u30b9\\u30c8\\u30ec\\u30fc\\u30b8\\u3067\\u306f\\u306a\\u304f\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30d0\\u30a4\\u30c8\\u30b3\\u30fc\\u30c9\\u306b\\u683c\\u7d0d\\u3059\\u308b\\u306e\\u3067gas\\u3092\\u7bc0\\u7d04\\u3059\\u308b\\n    //State variables\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    AggregatorV3Interface private s_priceFeed;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    //immutable\\u3092\\u4f7f\\u3046\\u3053\\u3068\\u3067\\u30b9\\u30c8\\u30ec\\u30fc\\u30b8\\u3067\\u306f\\u306a\\u304f\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30d0\\u30a4\\u30c8\\u30b3\\u30fc\\u30c9\\u306b\\u683c\\u7d0d\\u3059\\u308b\\u306e\\u3067gas\\u3092\\u7bc0\\u7d04\\u3059\\u308b\\n    address private immutable i_owner;\\n\\n    //modifier\\n    modifier onlyOwner() {\\n        // require(msg.sender==i_owner,\\\"Sender is not owner!\\\");\\n        //\\u6587\\u5b57\\u5217\\u3092\\u4f7f\\u308f\\u306a\\u3044\\u306e\\u3067gas\\u3092\\u7bc0\\u7d04\\u3067\\u304d\\u308b\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _; //\\u547c\\u3073\\u51fa\\u3057\\u5143function\\u3092\\u5b9f\\u884c\\n    }\\n\\n    //constructor\\n    //receive\\n    //fallback\\n    //external\\n    //public\\n    //internal\\n    //private\\n    //view/pure\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    //fund function\\u306e\\u547c\\u51fa\\u3057\\u306a\\u3057\\u3067\\u3053\\u306e\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306bETH\\u3092\\u9001\\u3063\\u305f\\u5834\\u5408\\u4f55\\u304c\\u8d77\\u304d\\u308b\\uff1f\\n    //solidity\\u3067\\u306f\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306bETH\\u3092\\u9001\\u3063\\u305f\\u5834\\u5408\\u306e\\u6319\\u52d5\\u3092\\u5b9f\\u88c5\\u3059\\u308b2\\u3064\\u306e\\u7279\\u6b8a\\u306a\\u95a2\\u6570\\u304c\\u3042\\u308b\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    //Eth is sent to contract\\n    //   is msg.data empty?\\n    //     /              \\\\\\n    //   yes               no\\n    //   /                  \\\\\\n    // receive()\\u306f\\u5b9f\\u88c5\\u6e08\\uff1f   fallback()\\n    //   /       \\\\\\n    //  yes      no\\n    //  /         \\\\\\n    // receive() fallback()\\n    function fund() public payable {\\n        //want to be able to set a minimum fund amount in USD\\n        //1e18=1*10**18\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough ether\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        //reset array\\n        s_funders = new address[](0);\\n\\n        //actually withdraw the fund\\n\\n        //transfer\\n        //msg.sender\\u306etype\\uff1aaddress\\n        //payable(msg.sender):payable address\\n        // //solidity\\u3067\\u306fpayable address\\u306e\\u307fnative token\\u306e\\u9001\\u91d1\\u53ef\\u80fd\\n        // payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        // //require\\u3092\\u4f7f\\u3046\\u3053\\u3068\\u3067\\u30a8\\u30e9\\u30fc\\u767a\\u751f\\u6642\\u51e6\\u7406\\u3092\\u623b\\u3059\\u3053\\u3068\\u304c\\u51fa\\u6765\\u308b\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send Failed\\\");\\n\\n        //call\\n        //\\u4efb\\u610f\\u306e\\u95a2\\u6570\\u3092\\u547c\\u3076\\u3053\\u3068\\u304c\\u51fa\\u6765\\u308b\\uff1f\\n        //bytes\\u578b\\u306e\\u5909\\u6570\\u3092\\u53d7\\u3051\\u53d6\\u308b\\u3053\\u3068\\u3082\\u3067\\u304d\\u308b\\n        // (bool callSuccess,bytes dataReturned)=payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        //reset array\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n}\\n\",\"keccak256\":\"0x01893b7a645d4c1f62bb515e14f1651f1c81a3f059088680c159dbb0b2c28cbc\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity 0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        //\\u4ed6\\u306e\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u3068\\u5bfe\\u8a71\\u3059\\u308b\\u306b\\u306f\\u6b21\\u306e\\uff12\\u3064\\u304c\\u5fc5\\u8981\\n        //ABI:\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u306e\\u30a4\\u30f3\\u30bf\\u30d5\\u30a7\\u30fc\\u30b9\\u3092\\u78ba\\u8a8d\\u3059\\u308b\\n        //ADDRESS:0x8A753747A1Fa494EC906cE90E9f37563A8AF630e \\u53d6\\u5f97\\u65b9\\u6cd5:https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        //ETH in term of USD\\n        //3000.00000000\\n        return uint256(price * 1e10); //1**10=1e10\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6a0f60aa27772dc2ee16f45053ba0d88604e8c6689b3216e797e4c793e9ff9f6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200129d3803806200129d83398181016040528101906200003791906200011f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000151565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b600060208284031215620001385762000137620000b5565b5b6000620001488482850162000108565b91505092915050565b60805160601c61111f6200017e6000396000818161033d0152818161058d01526105dc015261111f6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aad565b6102f2565b6040516100cc9190610af3565b60405180910390f35b3480156100e157600080fd5b506100ea61033b565b005b3480156100f857600080fd5b5061010161057c565b60405161010e9190610af3565b60405180910390f35b34801561012357600080fd5b5061012c610589565b6040516101399190610b1d565b60405180910390f35b34801561014e57600080fd5b506101576105b1565b6040516101649190610b97565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105da565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bde565b61087f565b6040516101c29190610b1d565b60405180910390f35b6802b5e3af16b188000061020860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c790919063ffffffff16565b1015610249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610c68565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561046c576000600182815481106103e6576103e5610c88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046490610ce6565b9150506103c3565b50600067ffffffffffffffff81111561048857610487610d2f565b5b6040519080825280602002602001820160405280156104b65781602001602082028036833780820191505090505b50600190805190602001906104cc9291906109a3565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f390610d8f565b60006040518083038185875af1925050503d8060008114610530576040519150601f19603f3d011682016040523d82523d6000602084013e610535565b606091505b5050905080610579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057090610df0565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610699575b5050505050905060005b815181101561076e57600082828151811061070b5761070a610c88565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076690610ce6565b9150506106ed565b50600067ffffffffffffffff81111561078a57610789610d2f565b5b6040519080825280602002602001820160405280156107b85781602001602082028036833780820191505090505b50600190805190602001906107ce9291906109a3565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f590610d8f565b60006040518083038185875af1925050503d8060008114610832576040519150601f19603f3d011682016040523d82523d6000602084013e610837565b606091505b505090508061087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087290610df0565b60405180910390fd5b5050565b60006001828154811061089557610894610c88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d383610903565b90506000670de0b6b3a764000085836108ec9190610e10565b6108f69190610e99565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094c57600080fd5b505afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610f57565b5050509150506402540be4008161099b9190610fd2565b915050919050565b828054828255906000526020600020908101928215610a1c579160200282015b82811115610a1b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c3565b5b509050610a299190610a2d565b5090565b5b80821115610a46576000816000905550600101610a2e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7a82610a4f565b9050919050565b610a8a81610a6f565b8114610a9557600080fd5b50565b600081359050610aa781610a81565b92915050565b600060208284031215610ac357610ac2610a4a565b5b6000610ad184828501610a98565b91505092915050565b6000819050919050565b610aed81610ada565b82525050565b6000602082019050610b086000830184610ae4565b92915050565b610b1781610a6f565b82525050565b6000602082019050610b326000830184610b0e565b92915050565b6000819050919050565b6000610b5d610b58610b5384610a4f565b610b38565b610a4f565b9050919050565b6000610b6f82610b42565b9050919050565b6000610b8182610b64565b9050919050565b610b9181610b76565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b610bbb81610ada565b8114610bc657600080fd5b50565b600081359050610bd881610bb2565b92915050565b600060208284031215610bf457610bf3610a4a565b5b6000610c0284828501610bc9565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b6000610c52601883610c0b565b9150610c5d82610c1c565b602082019050919050565b60006020820190508181036000830152610c8181610c45565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf182610ada565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2457610d23610cb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d79600083610d5e565b9150610d8482610d69565b600082019050919050565b6000610d9a82610d6c565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dda600b83610c0b565b9150610de582610da4565b602082019050919050565b60006020820190508181036000830152610e0981610dcd565b9050919050565b6000610e1b82610ada565b9150610e2683610ada565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5f57610e5e610cb7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea482610ada565b9150610eaf83610ada565b925082610ebf57610ebe610e6a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ee981610eca565b8114610ef457600080fd5b50565b600081519050610f0681610ee0565b92915050565b6000819050919050565b610f1f81610f0c565b8114610f2a57600080fd5b50565b600081519050610f3c81610f16565b92915050565b600081519050610f5181610bb2565b92915050565b600080600080600060a08688031215610f7357610f72610a4a565b5b6000610f8188828901610ef7565b9550506020610f9288828901610f2d565b9450506040610fa388828901610f42565b9350506060610fb488828901610f42565b9250506080610fc588828901610ef7565b9150509295509295909350565b6000610fdd82610f0c565b9150610fe883610f0c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102757611026610cb7565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106457611063610cb7565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110a1576110a0610cb7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110de576110dd610cb7565b5b82820290509291505056fea2646970667358221220114159682f269ae6b4dfd5773bcf9c2cd68b99ed00f88b947beb90a17d845b5564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aad565b6102f2565b6040516100cc9190610af3565b60405180910390f35b3480156100e157600080fd5b506100ea61033b565b005b3480156100f857600080fd5b5061010161057c565b60405161010e9190610af3565b60405180910390f35b34801561012357600080fd5b5061012c610589565b6040516101399190610b1d565b60405180910390f35b34801561014e57600080fd5b506101576105b1565b6040516101649190610b97565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105da565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610bde565b61087f565b6040516101c29190610b1d565b60405180910390f35b6802b5e3af16b188000061020860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c790919063ffffffff16565b1015610249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610c68565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561046c576000600182815481106103e6576103e5610c88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046490610ce6565b9150506103c3565b50600067ffffffffffffffff81111561048857610487610d2f565b5b6040519080825280602002602001820160405280156104b65781602001602082028036833780820191505090505b50600190805190602001906104cc9291906109a3565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f390610d8f565b60006040518083038185875af1925050503d8060008114610530576040519150601f19603f3d011682016040523d82523d6000602084013e610535565b606091505b5050905080610579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057090610df0565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610699575b5050505050905060005b815181101561076e57600082828151811061070b5761070a610c88565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076690610ce6565b9150506106ed565b50600067ffffffffffffffff81111561078a57610789610d2f565b5b6040519080825280602002602001820160405280156107b85781602001602082028036833780820191505090505b50600190805190602001906107ce9291906109a3565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f590610d8f565b60006040518083038185875af1925050503d8060008114610832576040519150601f19603f3d011682016040523d82523d6000602084013e610837565b606091505b505090508061087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087290610df0565b60405180910390fd5b5050565b60006001828154811061089557610894610c88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d383610903565b90506000670de0b6b3a764000085836108ec9190610e10565b6108f69190610e99565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094c57600080fd5b505afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610f57565b5050509150506402540be4008161099b9190610fd2565b915050919050565b828054828255906000526020600020908101928215610a1c579160200282015b82811115610a1b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c3565b5b509050610a299190610a2d565b5090565b5b80821115610a46576000816000905550600101610a2e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7a82610a4f565b9050919050565b610a8a81610a6f565b8114610a9557600080fd5b50565b600081359050610aa781610a81565b92915050565b600060208284031215610ac357610ac2610a4a565b5b6000610ad184828501610a98565b91505092915050565b6000819050919050565b610aed81610ada565b82525050565b6000602082019050610b086000830184610ae4565b92915050565b610b1781610a6f565b82525050565b6000602082019050610b326000830184610b0e565b92915050565b6000819050919050565b6000610b5d610b58610b5384610a4f565b610b38565b610a4f565b9050919050565b6000610b6f82610b42565b9050919050565b6000610b8182610b64565b9050919050565b610b9181610b76565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b610bbb81610ada565b8114610bc657600080fd5b50565b600081359050610bd881610bb2565b92915050565b600060208284031215610bf457610bf3610a4a565b5b6000610c0284828501610bc9565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865720000000000000000600082015250565b6000610c52601883610c0b565b9150610c5d82610c1c565b602082019050919050565b60006020820190508181036000830152610c8181610c45565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf182610ada565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2457610d23610cb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d79600083610d5e565b9150610d8482610d69565b600082019050919050565b6000610d9a82610d6c565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610dda600b83610c0b565b9150610de582610da4565b602082019050919050565b60006020820190508181036000830152610e0981610dcd565b9050919050565b6000610e1b82610ada565b9150610e2683610ada565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5f57610e5e610cb7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea482610ada565b9150610eaf83610ada565b925082610ebf57610ebe610e6a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ee981610eca565b8114610ef457600080fd5b50565b600081519050610f0681610ee0565b92915050565b6000819050919050565b610f1f81610f0c565b8114610f2a57600080fd5b50565b600081519050610f3c81610f16565b92915050565b600081519050610f5181610bb2565b92915050565b600080600080600060a08688031215610f7357610f72610a4a565b5b6000610f8188828901610ef7565b9550506020610f9288828901610f2d565b9450506040610fa388828901610f42565b9350506060610fb488828901610f42565b9250506080610fc588828901610ef7565b9150509295509295909350565b6000610fdd82610f0c565b9150610fe883610f0c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102757611026610cb7565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106457611063610cb7565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110a1576110a0610cb7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110de576110dd610cb7565b5b82820290509291505056fea2646970667358221220114159682f269ae6b4dfd5773bcf9c2cd68b99ed00f88b947beb90a17d845b5564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}